{"version":3,"sources":["../node_modules/refractor/lang/bsl.js"],"names":["bsl","Prism","languages","comment","string","pattern","greedy","keyword","lookbehind","number","operator","punctuation","directive","alias","oscript","module","exports","displayName","aliases"],"mappings":"wHAMA,SAASA,EAAIC,GAKXA,EAAMC,UAAUF,IAAM,CACpBG,QAAS,SACTC,OAAQ,CAER,CACEC,QAAS,sBACTC,QAAQ,GAGV,CACED,QAAS,0BAEXE,QAAS,CAAC,CAERF,QAAS,g/CACTG,YAAY,GACX,CAEDH,QAAS,2MAEXI,OAAQ,CACNJ,QAAS,oIACTG,YAAY,GAEdE,SAAU,CAAC,mBACX,CACEL,QAAS,uNACTG,YAAY,GAEd,CACEH,QAAS,wBAEXM,YAAa,yBACbC,UAAW,CAEX,CACEP,QAAS,aACTG,YAAY,EACZK,MAAO,aAST,CACER,QAAS,YACTQ,MAAO,eAGXZ,EAAMC,UAAUY,QAAUb,EAAMC,UAAe,IA7DjDa,EAAOC,QAAUhB,EACjBA,EAAIiB,YAAc,MAClBjB,EAAIkB,QAAU","file":"static/js/react-syntax-highlighter_languages_refractor_bsl.a388ccfe.chunk.js","sourcesContent":["'use strict';\n\nmodule.exports = bsl;\nbsl.displayName = 'bsl';\nbsl.aliases = [];\n\nfunction bsl(Prism) {\n  /* eslint-disable no-misleading-character-class */\n  // 1C:Enterprise\n  // https://github.com/Diversus23/\n  //\n  Prism.languages.bsl = {\n    comment: /\\/\\/.*/,\n    string: [// Строки\n    // Strings\n    {\n      pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n      greedy: true\n    }, // Дата и время\n    // Date & time\n    {\n      pattern: /'(?:[^'\\r\\n\\\\]|\\\\.)*'/\n    }],\n    keyword: [{\n      // RU\n      pattern: /(^|[^\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])(?:пока|для|новый|прервать|попытка|исключение|вызватьисключение|иначе|конецпопытки|неопределено|функция|перем|возврат|конецфункции|если|иначеесли|процедура|конецпроцедуры|тогда|знач|экспорт|конецесли|из|каждого|истина|ложь|по|цикл|конеццикла|выполнить)(?![\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])/i,\n      lookbehind: true\n    }, {\n      // EN\n      pattern: /\\b(?:while|for|new|break|try|except|raise|else|endtry|undefined|function|var|return|endfunction|null|if|elseif|procedure|endprocedure|then|val|export|endif|in|each|true|false|to|do|enddo|execute)\\b/i\n    }],\n    number: {\n      pattern: /(^(?=\\d)|[^\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:E[+-]?\\d+)?/i,\n      lookbehind: true\n    },\n    operator: [/[<>+\\-*/]=?|[%=]/, // RU\n    {\n      pattern: /(^|[^\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])(?:и|или|не)(?![\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])/i,\n      lookbehind: true\n    }, // EN\n    {\n      pattern: /\\b(?:and|or|not)\\b/i\n    }],\n    punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.]/,\n    directive: [// Теги препроцессора вида &Клиент, &Сервер, ...\n    // Preprocessor tags of the type &Client, &Server, ...\n    {\n      pattern: /^(\\s*)&.*/m,\n      lookbehind: true,\n      alias: 'important'\n    }, // Инструкции препроцессора вида:\n    // #Если Сервер Тогда\n    // ...\n    // #КонецЕсли\n    // Preprocessor instructions of the form:\n    // #If Server Then\n    // ...\n    // #EndIf\n    {\n      pattern: /^\\s*#.*/gm,\n      alias: 'important'\n    }]\n  };\n  Prism.languages.oscript = Prism.languages['bsl'];\n}"],"sourceRoot":""}