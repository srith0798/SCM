{"version":3,"sources":["../node_modules/refractor/lang/objectivec.js","../node_modules/refractor/lang/c.js"],"names":["refractorC","objectivec","Prism","register","languages","extend","string","keyword","operator","objc","module","exports","displayName","aliases","c","comment","pattern","greedy","lookbehind","function","number","insertBefore","macro","alias","inside","directive","punctuation","expression","constant"],"mappings":"4HAEA,IAAIA,EAAa,EAAQ,KAMzB,SAASC,EAAWC,GAClBA,EAAMC,SAASH,GACfE,EAAME,UAAUH,WAAaC,EAAME,UAAUC,OAAO,IAAK,CACvDC,OAAQ,qFACRC,QAAS,wYACTC,SAAU,iEAELN,EAAME,UAAUH,WAAW,cAClCC,EAAME,UAAUK,KAAOP,EAAME,UAAUH,WAZzCS,EAAOC,QAAUV,EACjBA,EAAWW,YAAc,aACzBX,EAAWY,QAAU,CAAC,S,iCCAtB,SAASC,EAAEZ,GACTA,EAAME,UAAUU,EAAIZ,EAAME,UAAUC,OAAO,QAAS,CAClDU,QAAS,CACPC,QAAS,sEACTC,QAAQ,GAEV,aAAc,CACZD,QAAS,mFACTE,YAAY,GAEdX,QAAS,oVACTY,SAAU,wBACVC,OAAQ,oHACRZ,SAAU,oDAEZN,EAAME,UAAUiB,aAAa,IAAK,SAAU,CAC1CC,MAAO,CAGLN,QAAS,4FACTE,YAAY,EACZD,QAAQ,EACRM,MAAO,WACPC,OAAQ,CACNlB,OAAQ,CAAC,CAEPU,QAAS,2BACTE,YAAY,GACXhB,EAAME,UAAUU,EAAU,QAC7BC,QAASb,EAAME,UAAUU,EAAW,QACpC,aAAc,CAAC,CACbE,QAAS,+BACTE,YAAY,GACX,CACDF,QAAS,+BACTE,YAAY,EACZK,MAAO,aAGTE,UAAW,CACTT,QAAS,gBACTE,YAAY,EACZK,MAAO,WAET,iBAAkB,KAClBG,YAAa,kBACbC,WAAY,CACVX,QAAS,YACTQ,OAAQtB,EAAME,UAAUU,KAK9Bc,SAAU,sIAEL1B,EAAME,UAAUU,EAAW,QA3DpCJ,EAAOC,QAAUG,EACjBA,EAAEF,YAAc,IAChBE,EAAED,QAAU","file":"static/js/react-syntax-highlighter_languages_refractor_objectivec.28652ae4.chunk.js","sourcesContent":["'use strict';\n\nvar refractorC = require('./c.js');\n\nmodule.exports = objectivec;\nobjectivec.displayName = 'objectivec';\nobjectivec.aliases = ['objc'];\n\nfunction objectivec(Prism) {\n  Prism.register(refractorC);\n  Prism.languages.objectivec = Prism.languages.extend('c', {\n    string: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|@\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    keyword: /\\b(?:asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while|in|self|super)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n    operator: /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n  });\n  delete Prism.languages.objectivec['class-name'];\n  Prism.languages.objc = Prism.languages.objectivec;\n}","'use strict';\n\nmodule.exports = c;\nc.displayName = 'c';\nc.aliases = [];\n\nfunction c(Prism) {\n  Prism.languages.c = Prism.languages.extend('clike', {\n    comment: {\n      pattern: /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n      lookbehind: true\n    },\n    keyword: /\\b(?:__attribute__|_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n    operator: />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n  });\n  Prism.languages.insertBefore('c', 'string', {\n    macro: {\n      // allow for multiline macro definitions\n      // spaces after the # character compile fine with gcc\n      pattern: /(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property',\n      inside: {\n        string: [{\n          // highlight the path of the include statement as a string\n          pattern: /^(#\\s*include\\s*)<[^>]+>/,\n          lookbehind: true\n        }, Prism.languages.c['string']],\n        comment: Prism.languages.c['comment'],\n        'macro-name': [{\n          pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n          lookbehind: true\n        }, {\n          pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n          lookbehind: true,\n          alias: 'function'\n        }],\n        // highlight macro directives as keywords\n        directive: {\n          pattern: /^(#\\s*)[a-z]+/,\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        'directive-hash': /^#/,\n        punctuation: /##|\\\\(?=[\\r\\n])/,\n        expression: {\n          pattern: /\\S[\\s\\S]*/,\n          inside: Prism.languages.c\n        }\n      }\n    },\n    // highlight predefined macros as constants\n    constant: /\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/\n  });\n  delete Prism.languages.c['boolean'];\n}"],"sourceRoot":""}