{"version":3,"sources":["../node_modules/refractor/lang/shell-session.js","../node_modules/refractor/lang/bash.js"],"names":["refractorBash","shellSession","Prism","register","strings","source","join","languages","command","pattern","RegExp","replace","greedy","inside","info","alias","user","punctuation","path","bash","lookbehind","output","module","exports","displayName","aliases","envVars","commandAfterHeredoc","insideString","environment","variable","number","operator","entity","shebang","comment","string","function","keyword","builtin","boolean","toBeCopied","i","length","shell"],"mappings":"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","file":"static/js/react-syntax-highlighter_languages_refractor_shellSession.4ef8fc27.chunk.js","sourcesContent":["'use strict';\n\nvar refractorBash = require('./bash.js');\n\nmodule.exports = shellSession;\nshellSession.displayName = 'shellSession';\nshellSession.aliases = [];\n\nfunction shellSession(Prism) {\n  Prism.register(refractorBash);\n\n  (function (Prism) {\n    // CAREFUL!\n    // The following patterns are concatenated, so the group referenced by a back reference is non-obvious!\n    var strings = [// normal string\n    /\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/.source, /'[^']*'/.source, /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/.source, // here doc\n    // 2 capturing groups\n    /<<-?\\s*([\"']?)(\\w+)\\1\\s[\\s\\S]*?[\\r\\n]\\2/.source].join('|');\n    Prism.languages['shell-session'] = {\n      command: {\n        pattern: RegExp( // user info\n        /^/.source + '(?:' + ( // <user> \":\" ( <path> )?\n        /[^\\s@:$#%*!/\\\\]+@[^\\r\\n@:$#%*!/\\\\]+(?::[^\\0-\\x1F$#%*?\"<>:;|]+)?/.source + '|' + // <path>\n        // Since the path pattern is quite general, we will require it to start with a special character to\n        // prevent false positives.\n        /[/~.][^\\0-\\x1F$#%*?\"<>@:;|]*/.source) + ')?' + // shell symbol\n        /[$#%](?=\\s)/.source + // bash command\n        /(?:[^\\\\\\r\\n \\t'\"<$]|[ \\t](?:(?!#)|#.*$)|\\\\(?:[^\\r]|\\r\\n?)|\\$(?!')|<(?!<)|<<str>>)+/.source.replace(/<<str>>/g, function () {\n          return strings;\n        }), 'm'),\n        greedy: true,\n        inside: {\n          info: {\n            // foo@bar:~/files$ exit\n            // foo@bar$ exit\n            // ~/files$ exit\n            pattern: /^[^#$%]+/,\n            alias: 'punctuation',\n            inside: {\n              user: /^[^\\s@:$#%*!/\\\\]+@[^\\r\\n@:$#%*!/\\\\]+/,\n              punctuation: /:/,\n              path: /[\\s\\S]+/\n            }\n          },\n          bash: {\n            pattern: /(^[$#%]\\s*)\\S[\\s\\S]*/,\n            lookbehind: true,\n            alias: 'language-bash',\n            inside: Prism.languages.bash\n          },\n          'shell-symbol': {\n            pattern: /^[$#%]/,\n            alias: 'important'\n          }\n        }\n      },\n      output: /.(?:.*(?:[\\r\\n]|.$))*/\n    };\n    Prism.languages['sh-session'] = Prism.languages['shellsession'] = Prism.languages['shell-session'];\n  })(Prism);\n}","'use strict';\n\nmodule.exports = bash;\nbash.displayName = 'bash';\nbash.aliases = ['shell'];\n\nfunction bash(Prism) {\n  ;\n\n  (function (Prism) {\n    // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n    // + LC_ALL, RANDOM, REPLY, SECONDS.\n    // + make sure PS1..4 are here as they are not always set,\n    // - some useless things.\n    var envVars = '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b';\n    var commandAfterHeredoc = {\n      pattern: /(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,\n      lookbehind: true,\n      alias: 'punctuation',\n      // this looks reasonably well in all themes\n      inside: null // see below\n\n    };\n    var insideString = {\n      bash: commandAfterHeredoc,\n      environment: {\n        pattern: RegExp('\\\\$' + envVars),\n        alias: 'constant'\n      },\n      variable: [// [0]: Arithmetic Environment\n      {\n        pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n        greedy: true,\n        inside: {\n          // If there is a $ sign at the beginning highlight $(( and )) as variable\n          variable: [{\n            pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n            lookbehind: true\n          }, /^\\$\\(\\(/],\n          number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n          // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n          operator: /--|\\+\\+|\\*\\*=?|<<=?|>>=?|&&|\\|\\||[=!+\\-*/%<>^&|]=?|[?~:]/,\n          // If there is no $ sign at the beginning highlight (( and )) as punctuation\n          punctuation: /\\(\\(?|\\)\\)?|,|;/\n        }\n      }, // [1]: Command Substitution\n      {\n        pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n        greedy: true,\n        inside: {\n          variable: /^\\$\\(|^`|\\)$|`$/\n        }\n      }, // [2]: Brace expansion\n      {\n        pattern: /\\$\\{[^}]+\\}/,\n        greedy: true,\n        inside: {\n          operator: /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n          punctuation: /[\\[\\]]/,\n          environment: {\n            pattern: RegExp('(\\\\{)' + envVars),\n            lookbehind: true,\n            alias: 'constant'\n          }\n        }\n      }, /\\$(?:\\w+|[#?*!@$])/],\n      // Escape sequences from echo and printf's manuals, and escaped quotes.\n      entity: /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|x[0-9a-fA-F]{1,2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})/\n    };\n    Prism.languages.bash = {\n      shebang: {\n        pattern: /^#!\\s*\\/.*/,\n        alias: 'important'\n      },\n      comment: {\n        pattern: /(^|[^\"{\\\\$])#.*/,\n        lookbehind: true\n      },\n      'function-name': [// a) function foo {\n      // b) foo() {\n      // c) function foo() {\n      // but not “foo {”\n      {\n        // a) and c)\n        pattern: /(\\bfunction\\s+)[\\w-]+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n        lookbehind: true,\n        alias: 'function'\n      }, {\n        // b)\n        pattern: /\\b[\\w-]+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n        alias: 'function'\n      }],\n      // Highlight variable names as variables in for and select beginnings.\n      'for-or-select': {\n        pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n        alias: 'variable',\n        lookbehind: true\n      },\n      // Highlight variable names as variables in the left-hand part\n      // of assignments (“=” and “+=”).\n      'assign-left': {\n        pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?=\\+?=)/,\n        inside: {\n          environment: {\n            pattern: RegExp('(^|[\\\\s;|&]|[<>]\\\\()' + envVars),\n            lookbehind: true,\n            alias: 'constant'\n          }\n        },\n        alias: 'variable',\n        lookbehind: true\n      },\n      string: [// Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n      {\n        pattern: /((?:^|[^<])<<-?\\s*)(\\w+)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n        lookbehind: true,\n        greedy: true,\n        inside: insideString\n      }, // Here-document with quotes around the tag\n      // → No expansion (so no “inside”).\n      {\n        pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          bash: commandAfterHeredoc\n        }\n      }, // “Normal” string\n      {\n        // https://www.gnu.org/software/bash/manual/html_node/Double-Quotes.html\n        pattern: /(^|[^\\\\](?:\\\\\\\\)*)\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/,\n        lookbehind: true,\n        greedy: true,\n        inside: insideString\n      }, {\n        // https://www.gnu.org/software/bash/manual/html_node/Single-Quotes.html\n        pattern: /(^|[^$\\\\])'[^']*'/,\n        lookbehind: true,\n        greedy: true\n      }, {\n        // https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html\n        pattern: /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n        greedy: true,\n        inside: {\n          entity: insideString.entity\n        }\n      }],\n      environment: {\n        pattern: RegExp('\\\\$?' + envVars),\n        alias: 'constant'\n      },\n      variable: insideString.variable,\n      function: {\n        pattern: /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|aptitude|apt-cache|apt-get|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n        lookbehind: true\n      },\n      keyword: {\n        pattern: /(^|[\\s;|&]|[<>]\\()(?:if|then|else|elif|fi|for|while|in|case|esac|function|select|do|done|until)(?=$|[)\\s;|&])/,\n        lookbehind: true\n      },\n      // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n      builtin: {\n        pattern: /(^|[\\s;|&]|[<>]\\()(?:\\.|:|break|cd|continue|eval|exec|exit|export|getopts|hash|pwd|readonly|return|shift|test|times|trap|umask|unset|alias|bind|builtin|caller|command|declare|echo|enable|help|let|local|logout|mapfile|printf|read|readarray|source|type|typeset|ulimit|unalias|set|shopt)(?=$|[)\\s;|&])/,\n        lookbehind: true,\n        // Alias added to make those easier to distinguish from strings.\n        alias: 'class-name'\n      },\n      boolean: {\n        pattern: /(^|[\\s;|&]|[<>]\\()(?:true|false)(?=$|[)\\s;|&])/,\n        lookbehind: true\n      },\n      'file-descriptor': {\n        pattern: /\\B&\\d\\b/,\n        alias: 'important'\n      },\n      operator: {\n        // Lots of redirections here, but not just that.\n        pattern: /\\d?<>|>\\||\\+=|=[=~]?|!=?|<<[<-]?|[&\\d]?>>|\\d[<>]&?|[<>][&=]?|&[>&]?|\\|[&|]?/,\n        inside: {\n          'file-descriptor': {\n            pattern: /^\\d/,\n            alias: 'important'\n          }\n        }\n      },\n      punctuation: /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n      number: {\n        pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n        lookbehind: true\n      }\n    };\n    commandAfterHeredoc.inside = Prism.languages.bash;\n    /* Patterns in command substitution. */\n\n    var toBeCopied = ['comment', 'function-name', 'for-or-select', 'assign-left', 'string', 'environment', 'function', 'keyword', 'builtin', 'boolean', 'file-descriptor', 'operator', 'punctuation', 'number'];\n    var inside = insideString.variable[1].inside;\n\n    for (var i = 0; i < toBeCopied.length; i++) {\n      inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];\n    }\n\n    Prism.languages.shell = Prism.languages.bash;\n  })(Prism);\n}"],"sourceRoot":""}