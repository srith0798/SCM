{"version":3,"sources":["../node_modules/refractor/lang/qml.js"],"names":["qml","Prism","jsString","source","jsComment","jsExpr","replace","i","languages","comment","pattern","greedy","RegExp","lookbehind","alias","inside","javascript","property","keyword","string","punctuation","module","exports","displayName","aliases"],"mappings":"yHAMA,SAASA,EAAIC,IAGX,SAAWA,GAST,IARA,IAAIC,EAAW,8CAA8CC,OACzDC,EAAY,yCAAyCD,OACrDE,EAAS,iGAAiGF,OAAOG,QAAQ,aAAa,WACxI,OAAOJ,KACNI,QAAQ,cAAc,WACvB,OAAOF,KAGAG,EAAI,EAAGA,EAAI,EAAGA,IACrBF,EAASA,EAAOC,QAAQ,WAAW,WACjC,OAAOD,KAIXA,EAASA,EAAOC,QAAQ,UAAW,aACnCL,EAAMO,UAAUR,IAAM,CACpBS,QAAS,CACPC,QAAS,0BACTC,QAAQ,GAEV,sBAAuB,CACrBD,QAASE,OAAO,2GAA2GT,OAAOG,QAAQ,SAAS,WACjJ,OAAOD,KACL,KACJQ,YAAY,EACZF,QAAQ,EACRG,MAAO,sBACPC,OAAQd,EAAMO,UAAUQ,YAE1B,aAAc,CACZN,QAAS,sDACTG,YAAY,GAEdI,SAAU,CAAC,CACTP,QAAS,oDACTG,YAAY,GACX,CACDH,QAAS,2FACTG,YAAY,EACZE,OAAQ,CACNG,QAAS,YACTD,SAAU,mBAGd,wBAAyB,CACvBP,QAASE,OAAO,0CAA0CT,OAAOG,QAAQ,SAAS,WAChF,OAAOD,KACL,KACJQ,YAAY,EACZF,QAAQ,EACRG,MAAO,sBACPC,OAAQd,EAAMO,UAAUQ,YAE1BG,OAAQ,wBACRD,QAAS,uBACTE,YAAa,cAxDjB,CA0DGnB,GAjELoB,EAAOC,QAAUtB,EACjBA,EAAIuB,YAAc,MAClBvB,EAAIwB,QAAU","file":"static/js/react-syntax-highlighter_languages_refractor_qml.2adec871.chunk.js","sourcesContent":["'use strict';\n\nmodule.exports = qml;\nqml.displayName = 'qml';\nqml.aliases = [];\n\nfunction qml(Prism) {\n  ;\n\n  (function (Prism) {\n    var jsString = /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|'(?:\\\\.|[^\\\\'\\r\\n])*'/.source;\n    var jsComment = /\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\//.source;\n    var jsExpr = /(?:[^\\\\()[\\]{}\"'/]|<string>|\\/(?![*/])|<comment>|\\(<expr>*\\)|\\[<expr>*\\]|\\{<expr>*\\}|\\\\[\\s\\S])/.source.replace(/<string>/g, function () {\n      return jsString;\n    }).replace(/<comment>/g, function () {\n      return jsComment;\n    }); // the pattern will blow up, so only a few iterations\n\n    for (var i = 0; i < 2; i++) {\n      jsExpr = jsExpr.replace(/<expr>/g, function () {\n        return jsExpr;\n      });\n    }\n\n    jsExpr = jsExpr.replace(/<expr>/g, '[^\\\\s\\\\S]');\n    Prism.languages.qml = {\n      comment: {\n        pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n        greedy: true\n      },\n      'javascript-function': {\n        pattern: RegExp(/((?:^|;)[ \\t]*)function\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*\\(<js>*\\)\\s*\\{<js>*\\}/.source.replace(/<js>/g, function () {\n          return jsExpr;\n        }), 'm'),\n        lookbehind: true,\n        greedy: true,\n        alias: 'language-javascript',\n        inside: Prism.languages.javascript\n      },\n      'class-name': {\n        pattern: /((?:^|[:;])[ \\t]*)(?!\\d)\\w+(?=[ \\t]*\\{|[ \\t]+on\\b)/m,\n        lookbehind: true\n      },\n      property: [{\n        pattern: /((?:^|[;{])[ \\t]*)(?!\\d)\\w+(?:\\.\\w+)*(?=[ \\t]*:)/m,\n        lookbehind: true\n      }, {\n        pattern: /((?:^|[;{])[ \\t]*)property[ \\t]+(?!\\d)\\w+(?:\\.\\w+)*[ \\t]+(?!\\d)\\w+(?:\\.\\w+)*(?=[ \\t]*:)/m,\n        lookbehind: true,\n        inside: {\n          keyword: /^property/,\n          property: /\\w+(?:\\.\\w+)*/\n        }\n      }],\n      'javascript-expression': {\n        pattern: RegExp(/(:[ \\t]*)(?![\\s;}[])(?:(?!$|[;}])<js>)+/.source.replace(/<js>/g, function () {\n          return jsExpr;\n        }), 'm'),\n        lookbehind: true,\n        greedy: true,\n        alias: 'language-javascript',\n        inside: Prism.languages.javascript\n      },\n      string: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      keyword: /\\b(?:as|import|on)\\b/,\n      punctuation: /[{}[\\]:;,]/\n    };\n  })(Prism);\n}"],"sourceRoot":""}