{"version":3,"sources":["../node_modules/refractor/lang/web-idl.js"],"names":["webIdl","Prism","id","source","type","typeInside","key","languages","comment","pattern","greedy","string","namespace","RegExp","lookbehind","inside","builtin","keyword","boolean","number","operator","punctuation","module","exports","displayName","aliases"],"mappings":"yHAMA,SAASA,EAAOC,IAGd,SAAWA,GACT,IAAIC,EAAK,wCAAwCC,OAC7CC,EAAO,MAAQ,yCAAyCD,OAAS,IAAM,gDAAgDA,OAAS,IAAM,kCAAkCA,OAASD,EAAK,gCAAgCC,OAAS,IAAM,aAAaA,OAClPE,EAAa,GA4DjB,IAAK,IAAIC,KA3DTL,EAAMM,UAAU,WAAa,CAC3BC,QAAS,CACPC,QAAS,0BACTC,QAAQ,GAEVC,OAAQ,CACNF,QAAS,UACTC,QAAQ,GAEVE,UAAW,CACTH,QAASI,OAAO,mBAAmBV,OAASD,GAC5CY,YAAY,GAEd,aAAc,CAAC,CACbL,QAAS,iEACTK,YAAY,EACZC,OAAQV,GACP,CACDI,QAASI,OAAO,4DAA4DV,OAASC,GACrFU,YAAY,EACZC,OAAQV,GACP,CAEDI,QAASI,OAAO,IAAM,gBAAgBV,OAASD,EAAK,UAAUC,OAAS,IAAMC,GAC7EU,YAAY,EACZC,OAAQV,GACP,CAEDI,QAASI,OAAO,mBAAmBV,OAASC,GAC5CU,YAAY,EACZC,OAAQV,GACP,CACDI,QAASI,OAAO,sFAAsFV,OAASD,GAC/GY,YAAY,GACX,CAEDL,QAASI,OAAO,SAASV,OAASD,GAClCY,YAAY,GAEdD,OAAOX,EAAK,mCAAmCC,QAAS,CACtDM,QAASI,OAAO,iCAAiCV,OAASD,GAC1DY,YAAY,GACX,CAEDL,QAASI,OAAOT,EAAO,MAAQ,mBAAmBD,OAASD,EAAK,aAAaC,OAAS,KACtFY,OAAQV,IAEVW,QAAS,8OACTC,QAAS,CAAC,oOACV,gJACAC,QAAS,qBACTC,OAAQ,CACNV,QAAS,2FACTK,YAAY,GAEdM,SAAU,iBACVC,YAAa,gBAGCpB,EAAMM,UAAU,WAClB,eAARD,IACFD,EAAWC,GAAOL,EAAMM,UAAU,WAAWD,IAIjDL,EAAMM,UAAkB,OAAIN,EAAMM,UAAU,WArE9C,CAsEGN,GA7ELqB,EAAOC,QAAUvB,EACjBA,EAAOwB,YAAc,SACrBxB,EAAOyB,QAAU","file":"static/js/react-syntax-highlighter_languages_refractor_webIdl.d93462ad.chunk.js","sourcesContent":["'use strict';\n\nmodule.exports = webIdl;\nwebIdl.displayName = 'webIdl';\nwebIdl.aliases = [];\n\nfunction webIdl(Prism) {\n  ;\n\n  (function (Prism) {\n    var id = /(?:\\B-|\\b_|\\b)[A-Za-z][\\w-]*(?![\\w-])/.source;\n    var type = '(?:' + /\\b(?:unsigned\\s+)?long\\s+long(?![\\w-])/.source + '|' + /\\b(?:unrestricted|unsigned)\\s+[a-z]+(?![\\w-])/.source + '|' + /(?!(?:unrestricted|unsigned)\\b)/.source + id + /(?:\\s*<(?:[^<>]|<[^<>]*>)*>)?/.source + ')' + /(?:\\s*\\?)?/.source;\n    var typeInside = {};\n    Prism.languages['web-idl'] = {\n      comment: {\n        pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n        greedy: true\n      },\n      string: {\n        pattern: /\"[^\"]*\"/,\n        greedy: true\n      },\n      namespace: {\n        pattern: RegExp(/(\\bnamespace\\s+)/.source + id),\n        lookbehind: true\n      },\n      'class-name': [{\n        pattern: /(^|[^\\w-])(?:iterable|maplike|setlike)\\s*<(?:[^<>]|<[^<>]*>)*>/,\n        lookbehind: true,\n        inside: typeInside\n      }, {\n        pattern: RegExp(/(\\b(?:attribute|const|deleter|getter|optional|setter)\\s+)/.source + type),\n        lookbehind: true,\n        inside: typeInside\n      }, {\n        // callback return type\n        pattern: RegExp('(' + /\\bcallback\\s+/.source + id + /\\s*=\\s*/.source + ')' + type),\n        lookbehind: true,\n        inside: typeInside\n      }, {\n        // typedef\n        pattern: RegExp(/(\\btypedef\\b\\s*)/.source + type),\n        lookbehind: true,\n        inside: typeInside\n      }, {\n        pattern: RegExp(/(\\b(?:callback|dictionary|enum|interface(?:\\s+mixin)?)\\s+)(?!(?:interface|mixin)\\b)/.source + id),\n        lookbehind: true\n      }, {\n        // inheritance\n        pattern: RegExp(/(:\\s*)/.source + id),\n        lookbehind: true\n      }, // includes and implements\n      RegExp(id + /(?=\\s+(?:implements|includes)\\b)/.source), {\n        pattern: RegExp(/(\\b(?:implements|includes)\\s+)/.source + id),\n        lookbehind: true\n      }, {\n        // function return type, parameter types, and dictionary members\n        pattern: RegExp(type + '(?=' + /\\s*(?:\\.{3}\\s*)?/.source + id + /\\s*[(),;=]/.source + ')'),\n        inside: typeInside\n      }],\n      builtin: /\\b(?:ArrayBuffer|BigInt64Array|BigUint64Array|ByteString|DOMString|DataView|Float32Array|Float64Array|FrozenArray|Int16Array|Int32Array|Int8Array|ObservableArray|Promise|USVString|Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray)\\b/,\n      keyword: [/\\b(?:async|attribute|callback|const|constructor|deleter|dictionary|enum|getter|implements|includes|inherit|interface|mixin|namespace|null|optional|or|partial|readonly|required|setter|static|stringifier|typedef|unrestricted)\\b/, // type keywords\n      /\\b(?:any|bigint|boolean|byte|double|float|iterable|long|maplike|object|octet|record|sequence|setlike|short|symbol|undefined|unsigned|void)\\b/],\n      boolean: /\\b(?:false|true)\\b/,\n      number: {\n        pattern: /(^|[^\\w-])-?(?:0x[0-9a-f]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|NaN|Infinity)(?![\\w-])/i,\n        lookbehind: true\n      },\n      operator: /\\.{3}|[=:?<>-]/,\n      punctuation: /[(){}[\\].,;]/\n    };\n\n    for (var key in Prism.languages['web-idl']) {\n      if (key !== 'class-name') {\n        typeInside[key] = Prism.languages['web-idl'][key];\n      }\n    }\n\n    Prism.languages['webidl'] = Prism.languages['web-idl'];\n  })(Prism);\n}"],"sourceRoot":""}