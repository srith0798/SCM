{"version":3,"sources":["../node_modules/refractor/lang/icu-message-format.js"],"names":["icuMessageFormat","Prism","nested","source","level","replace","stringPattern","escape","pattern","greedy","alias","string","inside","argumentSource","nestedMessage","RegExp","message","lookbehind","languages","argument","content","punctuation","range","operator","number","rest","offset","selector","keyword","module","exports","displayName","aliases"],"mappings":"yHAMA,SAASA,EAAiBC,IAKxB,SAAWA,GAMT,SAASC,EAAOC,EAAQC,GACtB,OAAIA,GAAS,EACJ,KAAKD,OAELA,EAAOE,QAAQ,WAAW,WAC/B,OAAOH,EAAOC,EAAQC,EAAQ,MAKpC,IAAIE,EAAgB,6BAChBC,EAAS,CACXC,QAAS,KACTC,QAAQ,EACRC,MAAO,YAELC,EAAS,CACXH,QAASF,EACTG,QAAQ,EACRG,OAAQ,CACNL,OAAQA,IAGRM,EAAiBX,EAAO,8CAA8CC,OAAOE,QAAQ,UAAU,WACjG,OAAOC,EAAcH,UACnB,GACAW,EAAgB,CAClBN,QAASO,OAAOF,GAChBD,OAAQ,CACNI,QAAS,CACPR,QAAS,sBACTS,YAAY,EACZL,OAAQ,MAGV,oBAAqB,CACnBJ,QAAS,IACTE,MAAO,iBAIbT,EAAMiB,UAAU,sBAAwB,CACtCC,SAAU,CACRX,QAASO,OAAOF,GAChBJ,QAAQ,EACRG,OAAQ,CACNQ,QAAS,CACPZ,QAAS,sBACTS,YAAY,EACZL,OAAQ,CACN,gBAAiB,CACfJ,QAAS,oBACTS,YAAY,GAEd,eAAgB,CAEdT,QAAS,0CACTS,YAAY,EACZL,OAAQ,CACNS,YAAa,KACbC,MAAO,CACLd,QAAS,mDACTS,YAAY,EACZL,OAAQ,CACNW,SAAU,aACVC,OAAQ,QAGZC,KAAM,OAIV,eAAgB,CAEdjB,QAAS,4DACTS,YAAY,EACZL,OAAQ,CACNc,OAAQ,iBACR,iBAAkBZ,EAClBa,SAAU,CACRnB,QAAS,mBACTI,OAAQ,CACNgB,QAAS,wCAKjB,eAAgB,CAEdpB,QAAS,0CACTS,YAAY,EACZL,OAAQ,CACN,iBAAkBE,EAClBa,SAAU,CACRnB,QAAS,cACTI,OAAQ,CACNgB,QAAS,cAKjBA,QAAS,6CACT,WAAY,CACVpB,QAAS,qDACTE,MAAO,WAET,eAAgB,CACdF,QAAS,sBACTS,YAAY,GAEd,YAAa,CACXT,QAAS,oEACTS,YAAY,GAEd,iBAAkB,CAChBT,QAASO,OAAO,mBAAmBZ,OAASD,EAAO,sCAAsCC,OAAQ,GAAK,KACtGc,YAAY,EACZP,MAAO,UAETW,YAAa,MAGjB,qBAAsB,CACpBb,QAAS,IACTE,MAAO,cAIbH,OAAQA,EACRI,OAAQA,GAEVG,EAAcF,OAAOI,QAAQJ,OAASX,EAAMiB,UAAU,sBACtDjB,EAAMiB,UAAU,sBAAsBC,SAASP,OAAOQ,QAAQR,OAAO,gBAAgBA,OAAOa,KAAOxB,EAAMiB,UAAU,sBA1IrH,CA2IGjB,GApJL4B,EAAOC,QAAU9B,EACjBA,EAAiB+B,YAAc,mBAC/B/B,EAAiBgC,QAAU","file":"static/js/react-syntax-highlighter_languages_refractor_icuMessageFormat.d5077805.chunk.js","sourcesContent":["'use strict';\n\nmodule.exports = icuMessageFormat;\nicuMessageFormat.displayName = 'icuMessageFormat';\nicuMessageFormat.aliases = [];\n\nfunction icuMessageFormat(Prism) {\n  // https://unicode-org.github.io/icu/userguide/format_parse/messages/\n  // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/MessageFormat.html\n  ;\n\n  (function (Prism) {\n    /**\n     * @param {string} source\n     * @param {number} level\n     * @returns {string}\n     */\n    function nested(source, level) {\n      if (level <= 0) {\n        return /[]/.source;\n      } else {\n        return source.replace(/<SELF>/g, function () {\n          return nested(source, level - 1);\n        });\n      }\n    }\n\n    var stringPattern = /'[{}:=,](?:[^']|'')*'(?!')/;\n    var escape = {\n      pattern: /''/,\n      greedy: true,\n      alias: 'operator'\n    };\n    var string = {\n      pattern: stringPattern,\n      greedy: true,\n      inside: {\n        escape: escape\n      }\n    };\n    var argumentSource = nested(/\\{(?:[^{}']|'(?![{},'])|''|<STR>|<SELF>)*\\}/.source.replace(/<STR>/g, function () {\n      return stringPattern.source;\n    }), 8);\n    var nestedMessage = {\n      pattern: RegExp(argumentSource),\n      inside: {\n        message: {\n          pattern: /^(\\{)[\\s\\S]+(?=\\}$)/,\n          lookbehind: true,\n          inside: null // see below\n\n        },\n        'message-delimiter': {\n          pattern: /./,\n          alias: 'punctuation'\n        }\n      }\n    };\n    Prism.languages['icu-message-format'] = {\n      argument: {\n        pattern: RegExp(argumentSource),\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /^(\\{)[\\s\\S]+(?=\\}$)/,\n            lookbehind: true,\n            inside: {\n              'argument-name': {\n                pattern: /^(\\s*)[^{}:=,\\s]+/,\n                lookbehind: true\n              },\n              'choice-style': {\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4c/classicu_1_1ChoiceFormat.html#details\n                pattern: /^(\\s*,\\s*choice\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                lookbehind: true,\n                inside: {\n                  punctuation: /\\|/,\n                  range: {\n                    pattern: /^(\\s*)[+-]?(?:\\d+(?:\\.\\d*)?|\\u221e)\\s*[<#\\u2264]/,\n                    lookbehind: true,\n                    inside: {\n                      operator: /[<#\\u2264]/,\n                      number: /\\S+/\n                    }\n                  },\n                  rest: null // see below\n\n                }\n              },\n              'plural-style': {\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/PluralFormat.html#:~:text=Patterns%20and%20Their%20Interpretation\n                pattern: /^(\\s*,\\s*(?:plural|selectordinal)\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                lookbehind: true,\n                inside: {\n                  offset: /^offset:\\s*\\d+/,\n                  'nested-message': nestedMessage,\n                  selector: {\n                    pattern: /=\\d+|[^{}:=,\\s]+/,\n                    inside: {\n                      keyword: /^(?:few|many|one|other|two|zero)$/\n                    }\n                  }\n                }\n              },\n              'select-style': {\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/SelectFormat.html#:~:text=Patterns%20and%20Their%20Interpretation\n                pattern: /^(\\s*,\\s*select\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                lookbehind: true,\n                inside: {\n                  'nested-message': nestedMessage,\n                  selector: {\n                    pattern: /[^{}:=,\\s]+/,\n                    inside: {\n                      keyword: /^other$/\n                    }\n                  }\n                }\n              },\n              keyword: /\\b(?:choice|plural|select|selectordinal)\\b/,\n              'arg-type': {\n                pattern: /\\b(?:date|duration|number|ordinal|spellout|time)\\b/,\n                alias: 'keyword'\n              },\n              'arg-skeleton': {\n                pattern: /(,\\s*)::[^{}:=,\\s]+/,\n                lookbehind: true\n              },\n              'arg-style': {\n                pattern: /(,\\s*)(?:currency|full|integer|long|medium|percent|short)(?=\\s*$)/,\n                lookbehind: true\n              },\n              'arg-style-text': {\n                pattern: RegExp(/(^\\s*,\\s*(?=\\S))/.source + nested(/(?:[^{}']|'[^']*'|\\{(?:<SELF>)?\\})+/.source, 8) + '$'),\n                lookbehind: true,\n                alias: 'string'\n              },\n              punctuation: /,/\n            }\n          },\n          'argument-delimiter': {\n            pattern: /./,\n            alias: 'operator'\n          }\n        }\n      },\n      escape: escape,\n      string: string\n    };\n    nestedMessage.inside.message.inside = Prism.languages['icu-message-format'];\n    Prism.languages['icu-message-format'].argument.inside.content.inside['choice-style'].inside.rest = Prism.languages['icu-message-format'];\n  })(Prism);\n}"],"sourceRoot":""}