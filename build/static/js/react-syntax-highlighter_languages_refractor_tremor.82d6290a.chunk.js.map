{"version":3,"sources":["../node_modules/refractor/lang/tremor.js"],"names":["tremor","Prism","languages","comment","pattern","lookbehind","extractor","greedy","inside","regex","function","value","identifier","keyword","boolean","number","alias","operator","punctuation","interpolationPattern","source","RegExp","interpolation","expression","string","troy","trickle","module","exports","displayName","aliases"],"mappings":"yHAMA,SAASA,EAAOC,IAGd,SAAWA,GACTA,EAAMC,UAAUF,OAAS,CACvBG,QAAS,CACPC,QAAS,gDACTC,YAAY,GAEd,sBAAuB,KAEvBC,UAAW,CACTF,QAAS,oDACTG,QAAQ,EACRC,OAAQ,CACNC,MAAO,CACLL,QAAS,iBACTC,YAAY,GAEdK,SAAU,OACVC,MAAO,cAGXC,WAAY,CACVR,QAAS,UACTG,QAAQ,GAEVG,SAAU,oCACVG,QAAS,mUACTC,QAAS,2BACTC,OAAQ,+EACR,sBAAuB,CACrBX,QAAS,aACTY,MAAO,eAETC,SAAU,wFACVC,YAAa,uBAEf,IAAIC,EAAuB,kEAAkEC,OAC7FnB,EAAMC,UAAUF,OAAO,uBAAyB,CAC9CI,QAASiB,OAAO,YAAYD,OAAZ,YAAwC,mCAAmCA,OAAS,IAAMD,EAA1F,aAA0I,wCAAwCC,OAAS,IAAMD,EAAjM,QAChBd,YAAY,EACZE,QAAQ,EACRC,OAAQ,CACNc,cAAe,CACblB,QAASiB,OAAOF,GAChBX,OAAQ,CACNU,YAAa,WACbK,WAAY,CACVnB,QAAS,UACTI,OAAQP,EAAMC,UAAUF,UAI9BwB,OAAQ,YAGZvB,EAAMC,UAAUuB,KAAOxB,EAAMC,UAAkB,OAC/CD,EAAMC,UAAUwB,QAAUzB,EAAMC,UAAkB,OAvDpD,CAwDGD,GA/DL0B,EAAOC,QAAU5B,EACjBA,EAAO6B,YAAc,SACrB7B,EAAO8B,QAAU","file":"static/js/react-syntax-highlighter_languages_refractor_tremor.82d6290a.chunk.js","sourcesContent":["'use strict';\n\nmodule.exports = tremor;\ntremor.displayName = 'tremor';\ntremor.aliases = [];\n\nfunction tremor(Prism) {\n  ;\n\n  (function (Prism) {\n    Prism.languages.tremor = {\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n        lookbehind: true\n      },\n      'interpolated-string': null,\n      // see below\n      extractor: {\n        pattern: /\\b[a-z_]\\w*\\|(?:[^\\r\\n\\\\|]|\\\\(?:\\r\\n|[\\s\\S]))*\\|/i,\n        greedy: true,\n        inside: {\n          regex: {\n            pattern: /(^re)\\|[\\s\\S]+/,\n            lookbehind: true\n          },\n          function: /^\\w+/,\n          value: /\\|[\\s\\S]+/\n        }\n      },\n      identifier: {\n        pattern: /`[^`]*`/,\n        greedy: true\n      },\n      function: /\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())\\b/,\n      keyword: /\\b(?:args|as|by|case|config|connect|connector|const|copy|create|default|define|deploy|drop|each|emit|end|erase|event|flow|fn|for|from|group|having|insert|into|intrinsic|let|links|match|merge|mod|move|of|operator|patch|pipeline|recur|script|select|set|sliding|state|stream|to|tumbling|update|use|when|where|window|with)\\b/,\n      boolean: /\\b(?:false|null|true)\\b/i,\n      number: /\\b(?:0b[01_]*|0x[0-9a-fA-F_]*|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[Ee][+-]?[\\d_]+)?)\\b/,\n      'pattern-punctuation': {\n        pattern: /%(?=[({[])/,\n        alias: 'punctuation'\n      },\n      operator: /[-+*\\/%~!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?>?=?|(?:absent|and|not|or|present|xor)\\b/,\n      punctuation: /::|[;\\[\\]()\\{\\},.:]/\n    };\n    var interpolationPattern = /#\\{(?:[^\"{}]|\\{[^{}]*\\}|\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\")*\\}/.source;\n    Prism.languages.tremor['interpolated-string'] = {\n      pattern: RegExp(/(^|[^\\\\])/.source + '(?:' + '\"\"\"(?:' + /[^\"\\\\#]|\\\\[\\s\\S]|\"(?!\"\")|#(?!\\{)/.source + '|' + interpolationPattern + ')*\"\"\"' + '|' + '\"(?:' + /[^\"\\\\\\r\\n#]|\\\\(?:\\r\\n|[\\s\\S])|#(?!\\{)/.source + '|' + interpolationPattern + ')*\"' + ')'),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: RegExp(interpolationPattern),\n          inside: {\n            punctuation: /^#\\{|\\}$/,\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: Prism.languages.tremor\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    };\n    Prism.languages.troy = Prism.languages['tremor'];\n    Prism.languages.trickle = Prism.languages['tremor'];\n  })(Prism);\n}"],"sourceRoot":""}