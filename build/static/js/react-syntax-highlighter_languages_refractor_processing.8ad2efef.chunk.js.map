{"version":3,"sources":["../node_modules/refractor/lang/processing.js"],"names":["processing","Prism","languages","extend","keyword","function","operator","insertBefore","constant","type","pattern","alias","module","exports","displayName","aliases"],"mappings":"yHAMA,SAASA,EAAWC,GAClBA,EAAMC,UAAUF,WAAaC,EAAMC,UAAUC,OAAO,QAAS,CAC3DC,QAAS,qKAETC,SAAU,iBACVC,SAAU,8CAEZL,EAAMC,UAAUK,aAAa,aAAc,SAAU,CAEnDC,SAAU,8BACVC,KAAM,CACJC,QAAS,4DACTC,MAAO,gBAhBbC,EAAOC,QAAUb,EACjBA,EAAWc,YAAc,aACzBd,EAAWe,QAAU","file":"static/js/react-syntax-highlighter_languages_refractor_processing.8ad2efef.chunk.js","sourcesContent":["'use strict';\n\nmodule.exports = processing;\nprocessing.displayName = 'processing';\nprocessing.aliases = [];\n\nfunction processing(Prism) {\n  Prism.languages.processing = Prism.languages.extend('clike', {\n    keyword: /\\b(?:break|case|catch|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\\b/,\n    // Spaces are allowed between function name and parenthesis\n    function: /\\b\\w+(?=\\s*\\()/,\n    operator: /<[<=]?|>[>=]?|&&?|\\|\\|?|[%?]|[!=+\\-*\\/]=?/\n  });\n  Prism.languages.insertBefore('processing', 'number', {\n    // Special case: XML is a type\n    constant: /\\b(?!XML\\b)[A-Z][A-Z\\d_]+\\b/,\n    type: {\n      pattern: /\\b(?:boolean|byte|char|color|double|float|int|[A-Z]\\w*)\\b/,\n      alias: 'class-name'\n    }\n  });\n}"],"sourceRoot":""}