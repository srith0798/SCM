{"version":3,"sources":["../node_modules/refractor/lang/reason.js"],"names":["reason","Prism","languages","extend","string","pattern","greedy","keyword","operator","insertBefore","char","constructor","label","alias","function","module","exports","displayName","aliases"],"mappings":"yHAMA,SAASA,EAAOC,GACdA,EAAMC,UAAUF,OAASC,EAAMC,UAAUC,OAAO,QAAS,CACvDC,OAAQ,CACNC,QAAS,sCACTC,QAAQ,GAGV,aAAc,aACdC,QAAS,4RACTC,SAAU,wGAEZP,EAAMC,UAAUO,aAAa,SAAU,aAAc,CACnDC,KAAM,CACJL,QAAS,gEACTC,QAAQ,GAGVK,YAAa,wBACbC,MAAO,CACLP,QAAS,mBACTQ,MAAO,mBAIJZ,EAAMC,UAAUF,OAAOc,SA5BhCC,EAAOC,QAAUhB,EACjBA,EAAOiB,YAAc,SACrBjB,EAAOkB,QAAU","file":"static/js/react-syntax-highlighter_languages_refractor_reason.6d727543.chunk.js","sourcesContent":["'use strict';\n\nmodule.exports = reason;\nreason.displayName = 'reason';\nreason.aliases = [];\n\nfunction reason(Prism) {\n  Prism.languages.reason = Prism.languages.extend('clike', {\n    string: {\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    },\n    // 'class-name' must be matched *after* 'constructor' defined below\n    'class-name': /\\b[A-Z]\\w*/,\n    keyword: /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n    operator: /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/\n  });\n  Prism.languages.insertBefore('reason', 'class-name', {\n    char: {\n      pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n      greedy: true\n    },\n    // Negative look-ahead prevents from matching things like String.capitalize\n    constructor: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n    label: {\n      pattern: /\\b[a-z]\\w*(?=::)/,\n      alias: 'symbol'\n    }\n  }); // We can't match functions property, so let's not even try.\n\n  delete Prism.languages.reason.function;\n}"],"sourceRoot":""}