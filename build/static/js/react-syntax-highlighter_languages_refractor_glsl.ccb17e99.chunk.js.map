{"version":3,"sources":["../node_modules/refractor/lang/glsl.js","../node_modules/refractor/lang/c.js"],"names":["refractorC","glsl","Prism","register","languages","extend","keyword","module","exports","displayName","aliases","c","comment","pattern","greedy","lookbehind","function","number","operator","insertBefore","macro","alias","inside","string","directive","punctuation","expression","constant"],"mappings":"2HAEA,IAAIA,EAAa,EAAQ,KAMzB,SAASC,EAAKC,GACZA,EAAMC,SAASH,GACfE,EAAME,UAAUH,KAAOC,EAAME,UAAUC,OAAO,IAAK,CACjDC,QAAS,ghCAPbC,EAAOC,QAAUP,EACjBA,EAAKQ,YAAc,OACnBR,EAAKS,QAAU,I,iCCAf,SAASC,EAAET,GACTA,EAAME,UAAUO,EAAIT,EAAME,UAAUC,OAAO,QAAS,CAClDO,QAAS,CACPC,QAAS,sEACTC,QAAQ,GAEV,aAAc,CACZD,QAAS,mFACTE,YAAY,GAEdT,QAAS,oVACTU,SAAU,wBACVC,OAAQ,oHACRC,SAAU,oDAEZhB,EAAME,UAAUe,aAAa,IAAK,SAAU,CAC1CC,MAAO,CAGLP,QAAS,4FACTE,YAAY,EACZD,QAAQ,EACRO,MAAO,WACPC,OAAQ,CACNC,OAAQ,CAAC,CAEPV,QAAS,2BACTE,YAAY,GACXb,EAAME,UAAUO,EAAU,QAC7BC,QAASV,EAAME,UAAUO,EAAW,QACpC,aAAc,CAAC,CACbE,QAAS,+BACTE,YAAY,GACX,CACDF,QAAS,+BACTE,YAAY,EACZM,MAAO,aAGTG,UAAW,CACTX,QAAS,gBACTE,YAAY,EACZM,MAAO,WAET,iBAAkB,KAClBI,YAAa,kBACbC,WAAY,CACVb,QAAS,YACTS,OAAQpB,EAAME,UAAUO,KAK9BgB,SAAU,sIAELzB,EAAME,UAAUO,EAAW,QA3DpCJ,EAAOC,QAAUG,EACjBA,EAAEF,YAAc,IAChBE,EAAED,QAAU","file":"static/js/react-syntax-highlighter_languages_refractor_glsl.ccb17e99.chunk.js","sourcesContent":["'use strict';\n\nvar refractorC = require('./c.js');\n\nmodule.exports = glsl;\nglsl.displayName = 'glsl';\nglsl.aliases = [];\n\nfunction glsl(Prism) {\n  Prism.register(refractorC);\n  Prism.languages.glsl = Prism.languages.extend('c', {\n    keyword: /\\b(?:attribute|const|uniform|varying|buffer|shared|coherent|volatile|restrict|readonly|writeonly|atomic_uint|layout|centroid|flat|smooth|noperspective|patch|sample|break|continue|do|for|while|switch|case|default|if|else|subroutine|in|out|inout|float|double|int|void|bool|true|false|invariant|precise|discard|return|d?mat[234](?:x[234])?|[ibdu]?vec[234]|uint|lowp|mediump|highp|precision|[iu]?sampler[123]D|[iu]?samplerCube|sampler[12]DShadow|samplerCubeShadow|[iu]?sampler[12]DArray|sampler[12]DArrayShadow|[iu]?sampler2DRect|sampler2DRectShadow|[iu]?samplerBuffer|[iu]?sampler2DMS(?:Array)?|[iu]?samplerCubeArray|samplerCubeArrayShadow|[iu]?image[123]D|[iu]?image2DRect|[iu]?imageCube|[iu]?imageBuffer|[iu]?image[12]DArray|[iu]?imageCubeArray|[iu]?image2DMS(?:Array)?|struct|common|partition|active|asm|class|union|enum|typedef|template|this|resource|goto|inline|noinline|public|static|extern|external|interface|long|short|half|fixed|unsigned|superp|input|output|hvec[234]|fvec[234]|sampler3DRect|filter|sizeof|cast|namespace|using)\\b/\n  });\n}","'use strict';\n\nmodule.exports = c;\nc.displayName = 'c';\nc.aliases = [];\n\nfunction c(Prism) {\n  Prism.languages.c = Prism.languages.extend('clike', {\n    comment: {\n      pattern: /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n      lookbehind: true\n    },\n    keyword: /\\b(?:__attribute__|_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n    operator: />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n  });\n  Prism.languages.insertBefore('c', 'string', {\n    macro: {\n      // allow for multiline macro definitions\n      // spaces after the # character compile fine with gcc\n      pattern: /(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property',\n      inside: {\n        string: [{\n          // highlight the path of the include statement as a string\n          pattern: /^(#\\s*include\\s*)<[^>]+>/,\n          lookbehind: true\n        }, Prism.languages.c['string']],\n        comment: Prism.languages.c['comment'],\n        'macro-name': [{\n          pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n          lookbehind: true\n        }, {\n          pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n          lookbehind: true,\n          alias: 'function'\n        }],\n        // highlight macro directives as keywords\n        directive: {\n          pattern: /^(#\\s*)[a-z]+/,\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        'directive-hash': /^#/,\n        punctuation: /##|\\\\(?=[\\r\\n])/,\n        expression: {\n          pattern: /\\S[\\s\\S]*/,\n          inside: Prism.languages.c\n        }\n      }\n    },\n    // highlight predefined macros as constants\n    constant: /\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/\n  });\n  delete Prism.languages.c['boolean'];\n}"],"sourceRoot":""}