{"version":3,"sources":["../node_modules/refractor/lang/bicep.js"],"names":["bicep","Prism","languages","comment","pattern","lookbehind","greedy","property","string","inside","interpolation","expression","punctuation","datatype","alias","boolean","keyword","decorator","function","number","operator","module","exports","displayName","aliases"],"mappings":"wHAMA,SAASA,EAAMC,GAEbA,EAAMC,UAAUF,MAAQ,CACtBG,QAAS,CAAC,CAERC,QAAS,kCACTC,YAAY,EACZC,QAAQ,GACP,CAEDF,QAAS,mBACTC,YAAY,EACZC,QAAQ,IAEVC,SAAU,CAAC,CACTH,QAAS,sCACTC,YAAY,GACX,CACDD,QAAS,2DACTC,YAAY,EACZC,QAAQ,IAEVE,OAAQ,CAAC,CACPJ,QAAS,qBACTE,QAAQ,GACP,CACDF,QAAS,4CACTC,YAAY,EACZC,QAAQ,IAEV,sBAAuB,CACrBF,QAAS,+DACTC,YAAY,EACZC,QAAQ,EACRG,OAAQ,CACNC,cAAe,CACbN,QAAS,mBACTK,OAAQ,CACNE,WAAY,CACVP,QAAS,wBACTC,YAAY,GAEdO,YAAa,cAGjBJ,OAAQ,YAGZK,SAAU,CACRT,QAAS,6CACTC,YAAY,EACZS,MAAO,cAETC,QAAS,qBAETC,QAAS,+EACTC,UAAW,SACXC,SAAU,2BACVC,OAAQ,6CACRC,SAAU,4FACVR,YAAa,iBAEfX,EAAMC,UAAUF,MAAM,uBAAuBS,OAAsB,cAAEA,OAAmB,WAAEA,OAASR,EAAMC,UAAUF,MAlErHqB,EAAOC,QAAUtB,EACjBA,EAAMuB,YAAc,QACpBvB,EAAMwB,QAAU","file":"static/js/react-syntax-highlighter_languages_refractor_bicep.88edc536.chunk.js","sourcesContent":["'use strict';\n\nmodule.exports = bicep;\nbicep.displayName = 'bicep';\nbicep.aliases = [];\n\nfunction bicep(Prism) {\n  // based loosely upon: https://github.com/Azure/bicep/blob/main/src/textmate/bicep.tmlanguage\n  Prism.languages.bicep = {\n    comment: [{\n      // multiline comments eg /* ASDF */\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      lookbehind: true,\n      greedy: true\n    }, {\n      // singleline comments eg // ASDF\n      pattern: /(^|[^\\\\:])\\/\\/.*/,\n      lookbehind: true,\n      greedy: true\n    }],\n    property: [{\n      pattern: /([\\r\\n][ \\t]*)[a-z_]\\w*(?=[ \\t]*:)/i,\n      lookbehind: true\n    }, {\n      pattern: /([\\r\\n][ \\t]*)'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'(?=[ \\t]*:)/,\n      lookbehind: true,\n      greedy: true\n    }],\n    string: [{\n      pattern: /'''[^'][\\s\\S]*?'''/,\n      greedy: true\n    }, {\n      pattern: /(^|[^\\\\'])'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'/,\n      lookbehind: true,\n      greedy: true\n    }],\n    'interpolated-string': {\n      pattern: /(^|[^\\\\'])'(?:\\\\.|\\$(?:(?!\\{)|\\{[^{}\\r\\n]*\\})|[^'\\\\\\r\\n$])*'/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$\\{[^{}\\r\\n]*\\}/,\n          inside: {\n            expression: {\n              pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n              lookbehind: true\n            },\n            punctuation: /^\\$\\{|\\}$/\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    datatype: {\n      pattern: /(\\b(?:output|param)\\b[ \\t]+\\w+[ \\t]+)\\w+\\b/,\n      lookbehind: true,\n      alias: 'class-name'\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    // https://github.com/Azure/bicep/blob/114a3251b4e6e30082a58729f19a8cc4e374ffa6/src/textmate/bicep.tmlanguage#L184\n    keyword: /\\b(?:existing|for|if|in|module|null|output|param|resource|targetScope|var)\\b/,\n    decorator: /@\\w+\\b/,\n    function: /\\b[a-z_]\\w*(?=[ \\t]*\\()/i,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n    operator: /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/,\n    punctuation: /[{}[\\];(),.:]/\n  };\n  Prism.languages.bicep['interpolated-string'].inside['interpolation'].inside['expression'].inside = Prism.languages.bicep;\n}"],"sourceRoot":""}