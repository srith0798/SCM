{"version":3,"sources":["../node_modules/refractor/lang/maxscript.js"],"names":["maxscript","Prism","keywords","languages","comment","pattern","greedy","string","lookbehind","path","alias","RegExp","source","argument","keyword","boolean","time","number","constant","color","operator","punctuation","module","exports","displayName","aliases"],"mappings":"yHAMA,SAASA,EAAUC,IAGjB,SAAWA,GACT,IAAIC,EAAW,2SACfD,EAAME,UAAUH,UAAY,CAC1BI,QAAS,CACPC,QAAS,8BACTC,QAAQ,GAEVC,OAAQ,CACNF,QAAS,iDACTG,YAAY,EACZF,QAAQ,GAEVG,KAAM,CACJJ,QAAS,4BACTC,QAAQ,EACRI,MAAO,UAET,gBAAiB,CACfL,QAASM,OAAO,OAChB,IAAIC,OAAS,IACb,mBAAmBA,OAAS,IAC5B,6FAA6FA,OAH7E,cAG4GV,EAASU,OAAS,IAAM,cAAcA,OAHlJ,kBAIRV,EAASU,OAAS,IAAM,SAASA,OAAS,IAClD,YAAYA,OAAS,IACrB,aAAaA,OAAU,KAAM,MAC7BJ,YAAY,EACZF,QAAQ,EACRI,MAAO,YAET,sBAAuB,CACrBL,QAAS,+BACTG,YAAY,EACZE,MAAO,YAETG,SAAU,CACRR,QAAS,oBACTK,MAAO,aAETI,QAASZ,EACTa,QAAS,qBACTC,KAAM,CACJX,QAAS,sGACTG,YAAY,EACZE,MAAO,UAETO,OAAQ,CAAC,CACPZ,QAAS,wFACTG,YAAY,GACX,gBACHU,SAAU,0DACVC,MAAO,CACLd,QAAS,+DACTK,MAAO,YAETU,SAAU,6BACVC,YAAa,+BAvDjB,CAyDGpB,GAhELqB,EAAOC,QAAUvB,EACjBA,EAAUwB,YAAc,YACxBxB,EAAUyB,QAAU","file":"static/js/react-syntax-highlighter_languages_refractor_maxscript.ea725fc5.chunk.js","sourcesContent":["'use strict';\n\nmodule.exports = maxscript;\nmaxscript.displayName = 'maxscript';\nmaxscript.aliases = [];\n\nfunction maxscript(Prism) {\n  ;\n\n  (function (Prism) {\n    var keywords = /\\b(?:about|and|animate|as|at|attributes|by|case|catch|collect|continue|coordsys|do|else|exit|fn|for|from|function|global|if|in|local|macroscript|mapped|max|not|of|off|on|or|parameters|persistent|plugin|rcmenu|return|rollout|set|struct|then|throw|to|tool|try|undo|utility|when|where|while|with)\\b/i;\n    Prism.languages.maxscript = {\n      comment: {\n        pattern: /\\/\\*[\\s\\S]*?(?:\\*\\/|$)|--.*/,\n        greedy: true\n      },\n      string: {\n        pattern: /(^|[^\"\\\\@])(?:\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|@\"[^\"]*\")/,\n        lookbehind: true,\n        greedy: true\n      },\n      path: {\n        pattern: /\\$(?:[\\w/\\\\.*?]|'[^']*')*/,\n        greedy: true,\n        alias: 'string'\n      },\n      'function-call': {\n        pattern: RegExp('((?:' + ( // start of line\n        /^/.source + '|' + // operators and other language constructs\n        /[;=<>+\\-*/^({\\[]/.source + '|' + // keywords as part of statements\n        /\\b(?:and|by|case|catch|collect|do|else|if|in|not|or|return|then|to|try|where|while|with)\\b/.source) + ')[ \\t]*)' + '(?!' + keywords.source + ')' + /[a-z_]\\w*\\b/.source + '(?=[ \\t]*(?:' + ( // variable\n        '(?!' + keywords.source + ')' + /[a-z_]/.source + '|' + // number\n        /\\d|-\\.?\\d/.source + '|' + // other expressions or literals\n        /[({'\"$@#?]/.source) + '))', 'im'),\n        lookbehind: true,\n        greedy: true,\n        alias: 'function'\n      },\n      'function-definition': {\n        pattern: /(\\b(?:fn|function)\\s+)\\w+\\b/i,\n        lookbehind: true,\n        alias: 'function'\n      },\n      argument: {\n        pattern: /\\b[a-z_]\\w*(?=:)/i,\n        alias: 'attr-name'\n      },\n      keyword: keywords,\n      boolean: /\\b(?:false|true)\\b/,\n      time: {\n        pattern: /(^|[^\\w.])(?:(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?[msft])+|\\d+:\\d+(?:\\.\\d*)?)(?![\\w.:])/,\n        lookbehind: true,\n        alias: 'number'\n      },\n      number: [{\n        pattern: /(^|[^\\w.])(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?|0x[a-fA-F0-9]+)(?![\\w.:])/,\n        lookbehind: true\n      }, /\\b(?:e|pi)\\b/],\n      constant: /\\b(?:dontcollect|ok|silentValue|undefined|unsupplied)\\b/,\n      color: {\n        pattern: /\\b(?:black|blue|brown|gray|green|orange|red|white|yellow)\\b/i,\n        alias: 'constant'\n      },\n      operator: /[-+*/<>=!]=?|[&^?]|#(?!\\()/,\n      punctuation: /[()\\[\\]{}.:,;]|#(?=\\()|\\\\$/m\n    };\n  })(Prism);\n}"],"sourceRoot":""}